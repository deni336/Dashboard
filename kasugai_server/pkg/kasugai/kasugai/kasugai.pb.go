// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: kasugai.proto

package kasugai

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserStatus int32

const (
	UserStatus_OFFLINE UserStatus = 0
	UserStatus_ONLINE  UserStatus = 1
	UserStatus_AWAY    UserStatus = 2
	UserStatus_BUSY    UserStatus = 3
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
		2: "AWAY",
		3: "BUSY",
	}
	UserStatus_value = map[string]int32{
		"OFFLINE": 0,
		"ONLINE":  1,
		"AWAY":    2,
		"BUSY":    3,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_kasugai_proto_enumTypes[0].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_kasugai_proto_enumTypes[0]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{0}
}

type RoomType int32

const (
	RoomType_CHAT  RoomType = 0
	RoomType_MEDIA RoomType = 1
	RoomType_VOIP  RoomType = 2
)

// Enum value maps for RoomType.
var (
	RoomType_name = map[int32]string{
		0: "CHAT",
		1: "MEDIA",
		2: "VOIP",
	}
	RoomType_value = map[string]int32{
		"CHAT":  0,
		"MEDIA": 1,
		"VOIP":  2,
	}
)

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}

func (x RoomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomType) Descriptor() protoreflect.EnumDescriptor {
	return file_kasugai_proto_enumTypes[1].Descriptor()
}

func (RoomType) Type() protoreflect.EnumType {
	return &file_kasugai_proto_enumTypes[1]
}

func (x RoomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomType.Descriptor instead.
func (RoomType) EnumDescriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{1}
}

type MediaType int32

const (
	MediaType_VIDEO  MediaType = 0
	MediaType_AUDIO  MediaType = 1
	MediaType_SCREEN MediaType = 2
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "VIDEO",
		1: "AUDIO",
		2: "SCREEN",
	}
	MediaType_value = map[string]int32{
		"VIDEO":  0,
		"AUDIO":  1,
		"SCREEN": 2,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_kasugai_proto_enumTypes[2].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_kasugai_proto_enumTypes[2]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{2}
}

type CallStatus int32

const (
	CallStatus_INITIATING  CallStatus = 0
	CallStatus_RINGING     CallStatus = 1
	CallStatus_IN_PROGRESS CallStatus = 2
	CallStatus_ENDED       CallStatus = 3
)

// Enum value maps for CallStatus.
var (
	CallStatus_name = map[int32]string{
		0: "INITIATING",
		1: "RINGING",
		2: "IN_PROGRESS",
		3: "ENDED",
	}
	CallStatus_value = map[string]int32{
		"INITIATING":  0,
		"RINGING":     1,
		"IN_PROGRESS": 2,
		"ENDED":       3,
	}
)

func (x CallStatus) Enum() *CallStatus {
	p := new(CallStatus)
	*p = x
	return p
}

func (x CallStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_kasugai_proto_enumTypes[3].Descriptor()
}

func (CallStatus) Type() protoreflect.EnumType {
	return &file_kasugai_proto_enumTypes[3]
}

func (x CallStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallStatus.Descriptor instead.
func (CallStatus) EnumDescriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{3}
}

// Common messages
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{1}
}

func (x *Id) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{2}
}

func (x *Ack) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Ack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Chat messages
type TextMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *Id                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SenderId    *Id                    `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	RecipientId *Id                    `protobuf:"bytes,3,opt,name=recipientId,proto3" json:"recipientId,omitempty"`
	Content     string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TextMessage) Reset() {
	*x = TextMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessage) ProtoMessage() {}

func (x *TextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessage.ProtoReflect.Descriptor instead.
func (*TextMessage) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{3}
}

func (x *TextMessage) GetId() *Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TextMessage) GetSenderId() *Id {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *TextMessage) GetRecipientId() *Id {
	if x != nil {
		return x.RecipientId
	}
	return nil
}

func (x *TextMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TextMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type UserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserList) Reset() {
	*x = UserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{4}
}

func (x *UserList) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *Id        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status UserStatus `protobuf:"varint,3,opt,name=status,proto3,enum=kasugai.UserStatus" json:"status,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetId() *Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_OFFLINE
}

type RoomParticipants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       *Id     `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Participants []*User `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *RoomParticipants) Reset() {
	*x = RoomParticipants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomParticipants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomParticipants) ProtoMessage() {}

func (x *RoomParticipants) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomParticipants.ProtoReflect.Descriptor instead.
func (*RoomParticipants) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{6}
}

func (x *RoomParticipants) GetRoomId() *Id {
	if x != nil {
		return x.RoomId
	}
	return nil
}

func (x *RoomParticipants) GetParticipants() []*User {
	if x != nil {
		return x.Participants
	}
	return nil
}

type RoomList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *RoomList) Reset() {
	*x = RoomList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomList) ProtoMessage() {}

func (x *RoomList) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomList.ProtoReflect.Descriptor instead.
func (*RoomList) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{7}
}

func (x *RoomList) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *Id      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParticipantIds []*Id    `protobuf:"bytes,3,rep,name=participantIds,proto3" json:"participantIds,omitempty"`
	Type           RoomType `protobuf:"varint,4,opt,name=type,proto3,enum=kasugai.RoomType" json:"type,omitempty"`
	CreatorId      *Id      `protobuf:"bytes,5,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Key            string   `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{8}
}

func (x *Room) GetId() *Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Room) GetParticipantIds() []*Id {
	if x != nil {
		return x.ParticipantIds
	}
	return nil
}

func (x *Room) GetType() RoomType {
	if x != nil {
		return x.Type
	}
	return RoomType_CHAT
}

func (x *Room) GetCreatorId() *Id {
	if x != nil {
		return x.CreatorId
	}
	return nil
}

func (x *Room) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// File transfer
type FileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *Id    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size        int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	MimeType    string `protobuf:"bytes,4,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	SenderId    *Id    `protobuf:"bytes,5,opt,name=senderId,proto3" json:"senderId,omitempty"`
	RecipientId *Id    `protobuf:"bytes,6,opt,name=recipientId,proto3" json:"recipientId,omitempty"`
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{9}
}

func (x *FileMetadata) GetId() *Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FileMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileMetadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileMetadata) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *FileMetadata) GetSenderId() *Id {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *FileMetadata) GetRecipientId() *Id {
	if x != nil {
		return x.RecipientId
	}
	return nil
}

type FileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId      *Id    `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Data        []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	ChunkNumber int32  `protobuf:"varint,3,opt,name=chunkNumber,proto3" json:"chunkNumber,omitempty"`
	IsLastChunk bool   `protobuf:"varint,4,opt,name=isLastChunk,proto3" json:"isLastChunk,omitempty"`
	Checksum    string `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{10}
}

func (x *FileChunk) GetFileId() *Id {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileChunk) GetChunkNumber() int32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *FileChunk) GetIsLastChunk() bool {
	if x != nil {
		return x.IsLastChunk
	}
	return false
}

func (x *FileChunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

// Media streaming
type MediaStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *Id                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SenderId  *Id                    `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Type      MediaType              `protobuf:"varint,3,opt,name=type,proto3,enum=kasugai.MediaType" json:"type,omitempty"`
	Data      []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MediaStream) Reset() {
	*x = MediaStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaStream) ProtoMessage() {}

func (x *MediaStream) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaStream.ProtoReflect.Descriptor instead.
func (*MediaStream) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{11}
}

func (x *MediaStream) GetId() *Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MediaStream) GetSenderId() *Id {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *MediaStream) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_VIDEO
}

func (x *MediaStream) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MediaStream) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// VoIP
type VoIPCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *Id                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CallerId  *Id                    `protobuf:"bytes,2,opt,name=callerId,proto3" json:"callerId,omitempty"`
	CalleeId  *Id                    `protobuf:"bytes,3,opt,name=calleeId,proto3" json:"calleeId,omitempty"`
	Status    CallStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=kasugai.CallStatus" json:"status,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=endTime,proto3,oneof" json:"endTime,omitempty"`
}

func (x *VoIPCall) Reset() {
	*x = VoIPCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoIPCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoIPCall) ProtoMessage() {}

func (x *VoIPCall) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoIPCall.ProtoReflect.Descriptor instead.
func (*VoIPCall) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{12}
}

func (x *VoIPCall) GetId() *Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VoIPCall) GetCallerId() *Id {
	if x != nil {
		return x.CallerId
	}
	return nil
}

func (x *VoIPCall) GetCalleeId() *Id {
	if x != nil {
		return x.CalleeId
	}
	return nil
}

func (x *VoIPCall) GetStatus() CallStatus {
	if x != nil {
		return x.Status
	}
	return CallStatus_INITIATING
}

func (x *VoIPCall) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *VoIPCall) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type SignalOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sdp string `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
}

func (x *SignalOffer) Reset() {
	*x = SignalOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalOffer) ProtoMessage() {}

func (x *SignalOffer) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalOffer.ProtoReflect.Descriptor instead.
func (*SignalOffer) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{13}
}

func (x *SignalOffer) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

type SignalAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sdp string `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
}

func (x *SignalAnswer) Reset() {
	*x = SignalAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalAnswer) ProtoMessage() {}

func (x *SignalAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalAnswer.ProtoReflect.Descriptor instead.
func (*SignalAnswer) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{14}
}

func (x *SignalAnswer) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

type SignalICECandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candidate     string `protobuf:"bytes,1,opt,name=candidate,proto3" json:"candidate,omitempty"`
	SdpMid        string `protobuf:"bytes,2,opt,name=sdpMid,proto3" json:"sdpMid,omitempty"`
	SdpMLineIndex int32  `protobuf:"varint,3,opt,name=sdpMLineIndex,proto3" json:"sdpMLineIndex,omitempty"`
}

func (x *SignalICECandidate) Reset() {
	*x = SignalICECandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalICECandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalICECandidate) ProtoMessage() {}

func (x *SignalICECandidate) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalICECandidate.ProtoReflect.Descriptor instead.
func (*SignalICECandidate) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{15}
}

func (x *SignalICECandidate) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

func (x *SignalICECandidate) GetSdpMid() string {
	if x != nil {
		return x.SdpMid
	}
	return ""
}

func (x *SignalICECandidate) GetSdpMLineIndex() int32 {
	if x != nil {
		return x.SdpMLineIndex
	}
	return 0
}

type VoIPSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallId *Id `protobuf:"bytes,1,opt,name=callId,proto3" json:"callId,omitempty"`
	// Types that are assignable to Signal:
	//
	//	*VoIPSignal_Offer
	//	*VoIPSignal_Answer
	//	*VoIPSignal_IceCandidate
	Signal isVoIPSignal_Signal `protobuf_oneof:"signal"`
}

func (x *VoIPSignal) Reset() {
	*x = VoIPSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kasugai_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoIPSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoIPSignal) ProtoMessage() {}

func (x *VoIPSignal) ProtoReflect() protoreflect.Message {
	mi := &file_kasugai_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoIPSignal.ProtoReflect.Descriptor instead.
func (*VoIPSignal) Descriptor() ([]byte, []int) {
	return file_kasugai_proto_rawDescGZIP(), []int{16}
}

func (x *VoIPSignal) GetCallId() *Id {
	if x != nil {
		return x.CallId
	}
	return nil
}

func (m *VoIPSignal) GetSignal() isVoIPSignal_Signal {
	if m != nil {
		return m.Signal
	}
	return nil
}

func (x *VoIPSignal) GetOffer() *SignalOffer {
	if x, ok := x.GetSignal().(*VoIPSignal_Offer); ok {
		return x.Offer
	}
	return nil
}

func (x *VoIPSignal) GetAnswer() *SignalAnswer {
	if x, ok := x.GetSignal().(*VoIPSignal_Answer); ok {
		return x.Answer
	}
	return nil
}

func (x *VoIPSignal) GetIceCandidate() *SignalICECandidate {
	if x, ok := x.GetSignal().(*VoIPSignal_IceCandidate); ok {
		return x.IceCandidate
	}
	return nil
}

type isVoIPSignal_Signal interface {
	isVoIPSignal_Signal()
}

type VoIPSignal_Offer struct {
	Offer *SignalOffer `protobuf:"bytes,2,opt,name=offer,proto3,oneof"`
}

type VoIPSignal_Answer struct {
	Answer *SignalAnswer `protobuf:"bytes,3,opt,name=answer,proto3,oneof"`
}

type VoIPSignal_IceCandidate struct {
	IceCandidate *SignalICECandidate `protobuf:"bytes,4,opt,name=iceCandidate,proto3,oneof"`
}

func (*VoIPSignal_Offer) isVoIPSignal_Signal() {}

func (*VoIPSignal_Answer) isVoIPSignal_Signal() {}

func (*VoIPSignal_IceCandidate) isVoIPSignal_Signal() {}

var File_kasugai_proto protoreflect.FileDescriptor

var file_kasugai_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x18, 0x0a,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x2f, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x64, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x6a, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69,
	0x2e, 0x49, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x2f,
	0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x73, 0x75,
	0x67, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22,
	0xd0, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0e, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x25,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b,
	0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67,
	0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69,
	0x2e, 0x49, 0x64, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52,
	0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a,
	0x09, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73,
	0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4c, 0x61,
	0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x22, 0xc9, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x27, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61,
	0x69, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0xa7, 0x02, 0x0a, 0x08, 0x56, 0x6f, 0x49, 0x50, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67,
	0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61,
	0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49,
	0x64, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x61,
	0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x0b, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x22, 0x20, 0x0a, 0x0c, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x22, 0x70, 0x0a, 0x12,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x43, 0x45, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x64, 0x70, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x64, 0x70, 0x4d, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x64, 0x70, 0x4d,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x73, 0x64, 0x70, 0x4d, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xdd,
	0x01, 0x0a, 0x0a, 0x56, 0x6f, 0x49, 0x50, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x23, 0x0a,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x12, 0x2f, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0x41, 0x0a, 0x0c, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61,
	0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x43, 0x45, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2a, 0x39,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x57, 0x41, 0x59, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x55, 0x53, 0x59, 0x10, 0x03, 0x2a, 0x29, 0x0a, 0x08, 0x52, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x48, 0x41, 0x54, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x4f,
	0x49, 0x50, 0x10, 0x02, 0x2a, 0x2d, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x43, 0x52, 0x45, 0x45,
	0x4e, 0x10, 0x02, 0x2a, 0x45, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x49, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x03, 0x32, 0x80, 0x01, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0f, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x2e,
	0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x0c, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x41, 0x63,
	0x6b, 0x12, 0x3a, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67,
	0x61, 0x69, 0x2e, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x32, 0xd0, 0x01,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a,
	0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e,
	0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x6b,
	0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d,
	0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0c, 0x2e,
	0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x11, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49,
	0x64, 0x1a, 0x0d, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x32, 0x80, 0x02, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0d,
	0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x0c, 0x2e,
	0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x08, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61,
	0x69, 0x2e, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x41,
	0x63, 0x6b, 0x12, 0x26, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x6b,
	0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x12, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x1a, 0x19,
	0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x11, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x32, 0xfe, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x14, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0c, 0x2e, 0x6b, 0x61, 0x73,
	0x75, 0x67, 0x61, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x2e,
	0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x1a, 0x0c, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x28,
	0x01, 0x12, 0x39, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67,
	0x61, 0x69, 0x2e, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x11,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x12, 0x0b, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x1a, 0x12,
	0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x30, 0x01, 0x32, 0xbf, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x6b, 0x61, 0x73, 0x75,
	0x67, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a,
	0x14, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x28, 0x01, 0x30, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x45, 0x6e, 0x64,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0b, 0x2e, 0x6b, 0x61,
	0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67,
	0x61, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x12, 0x3e, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x56, 0x6f, 0x49, 0x50, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x13, 0x2e, 0x6b, 0x61, 0x73, 0x75, 0x67,
	0x61, 0x69, 0x2e, 0x56, 0x6f, 0x49, 0x50, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x1a, 0x13, 0x2e,
	0x6b, 0x61, 0x73, 0x75, 0x67, 0x61, 0x69, 0x2e, 0x56, 0x6f, 0x49, 0x50, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0d, 0x5a, 0x08, 0x2f, 0x6b, 0x61, 0x73, 0x75, 0x67,
	0x61, 0x69, 0x90, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kasugai_proto_rawDescOnce sync.Once
	file_kasugai_proto_rawDescData = file_kasugai_proto_rawDesc
)

func file_kasugai_proto_rawDescGZIP() []byte {
	file_kasugai_proto_rawDescOnce.Do(func() {
		file_kasugai_proto_rawDescData = protoimpl.X.CompressGZIP(file_kasugai_proto_rawDescData)
	})
	return file_kasugai_proto_rawDescData
}

var file_kasugai_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_kasugai_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_kasugai_proto_goTypes = []any{
	(UserStatus)(0),               // 0: kasugai.UserStatus
	(RoomType)(0),                 // 1: kasugai.RoomType
	(MediaType)(0),                // 2: kasugai.MediaType
	(CallStatus)(0),               // 3: kasugai.CallStatus
	(*Error)(nil),                 // 4: kasugai.Error
	(*Id)(nil),                    // 5: kasugai.Id
	(*Ack)(nil),                   // 6: kasugai.Ack
	(*TextMessage)(nil),           // 7: kasugai.TextMessage
	(*UserList)(nil),              // 8: kasugai.UserList
	(*User)(nil),                  // 9: kasugai.User
	(*RoomParticipants)(nil),      // 10: kasugai.RoomParticipants
	(*RoomList)(nil),              // 11: kasugai.RoomList
	(*Room)(nil),                  // 12: kasugai.Room
	(*FileMetadata)(nil),          // 13: kasugai.FileMetadata
	(*FileChunk)(nil),             // 14: kasugai.FileChunk
	(*MediaStream)(nil),           // 15: kasugai.MediaStream
	(*VoIPCall)(nil),              // 16: kasugai.VoIPCall
	(*SignalOffer)(nil),           // 17: kasugai.SignalOffer
	(*SignalAnswer)(nil),          // 18: kasugai.SignalAnswer
	(*SignalICECandidate)(nil),    // 19: kasugai.SignalICECandidate
	(*VoIPSignal)(nil),            // 20: kasugai.VoIPSignal
	(*timestamppb.Timestamp)(nil), // 21: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 22: google.protobuf.Empty
}
var file_kasugai_proto_depIdxs = []int32{
	5,  // 0: kasugai.TextMessage.id:type_name -> kasugai.Id
	5,  // 1: kasugai.TextMessage.senderId:type_name -> kasugai.Id
	5,  // 2: kasugai.TextMessage.recipientId:type_name -> kasugai.Id
	21, // 3: kasugai.TextMessage.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 4: kasugai.UserList.users:type_name -> kasugai.User
	5,  // 5: kasugai.User.id:type_name -> kasugai.Id
	0,  // 6: kasugai.User.status:type_name -> kasugai.UserStatus
	5,  // 7: kasugai.RoomParticipants.roomId:type_name -> kasugai.Id
	9,  // 8: kasugai.RoomParticipants.participants:type_name -> kasugai.User
	12, // 9: kasugai.RoomList.rooms:type_name -> kasugai.Room
	5,  // 10: kasugai.Room.id:type_name -> kasugai.Id
	5,  // 11: kasugai.Room.participantIds:type_name -> kasugai.Id
	1,  // 12: kasugai.Room.type:type_name -> kasugai.RoomType
	5,  // 13: kasugai.Room.creatorId:type_name -> kasugai.Id
	5,  // 14: kasugai.FileMetadata.id:type_name -> kasugai.Id
	5,  // 15: kasugai.FileMetadata.senderId:type_name -> kasugai.Id
	5,  // 16: kasugai.FileMetadata.recipientId:type_name -> kasugai.Id
	5,  // 17: kasugai.FileChunk.fileId:type_name -> kasugai.Id
	5,  // 18: kasugai.MediaStream.id:type_name -> kasugai.Id
	5,  // 19: kasugai.MediaStream.senderId:type_name -> kasugai.Id
	2,  // 20: kasugai.MediaStream.type:type_name -> kasugai.MediaType
	21, // 21: kasugai.MediaStream.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 22: kasugai.VoIPCall.id:type_name -> kasugai.Id
	5,  // 23: kasugai.VoIPCall.callerId:type_name -> kasugai.Id
	5,  // 24: kasugai.VoIPCall.calleeId:type_name -> kasugai.Id
	3,  // 25: kasugai.VoIPCall.status:type_name -> kasugai.CallStatus
	21, // 26: kasugai.VoIPCall.startTime:type_name -> google.protobuf.Timestamp
	21, // 27: kasugai.VoIPCall.endTime:type_name -> google.protobuf.Timestamp
	5,  // 28: kasugai.VoIPSignal.callId:type_name -> kasugai.Id
	17, // 29: kasugai.VoIPSignal.offer:type_name -> kasugai.SignalOffer
	18, // 30: kasugai.VoIPSignal.answer:type_name -> kasugai.SignalAnswer
	19, // 31: kasugai.VoIPSignal.iceCandidate:type_name -> kasugai.SignalICECandidate
	7,  // 32: kasugai.ChatService.SendTextMessage:input_type -> kasugai.TextMessage
	5,  // 33: kasugai.ChatService.ReceiveTextMessages:input_type -> kasugai.Id
	9,  // 34: kasugai.UserService.RegisterUser:input_type -> kasugai.User
	9,  // 35: kasugai.UserService.UpdateUserStatus:input_type -> kasugai.User
	22, // 36: kasugai.UserService.GetUserList:input_type -> google.protobuf.Empty
	5,  // 37: kasugai.UserService.GetUserById:input_type -> kasugai.Id
	12, // 38: kasugai.RoomService.CreateRoom:input_type -> kasugai.Room
	5,  // 39: kasugai.RoomService.JoinRoom:input_type -> kasugai.Id
	5,  // 40: kasugai.RoomService.LeaveRoom:input_type -> kasugai.Id
	5,  // 41: kasugai.RoomService.GetRoomParticipants:input_type -> kasugai.Id
	22, // 42: kasugai.RoomService.GetRoomList:input_type -> google.protobuf.Empty
	13, // 43: kasugai.FileTransferService.InitiateFileTransfer:input_type -> kasugai.FileMetadata
	14, // 44: kasugai.FileTransferService.TransferFileChunk:input_type -> kasugai.FileChunk
	5,  // 45: kasugai.FileTransferService.ReceiveFileMetadata:input_type -> kasugai.Id
	5,  // 46: kasugai.FileTransferService.ReceiveFileChunks:input_type -> kasugai.Id
	15, // 47: kasugai.MediaService.StartMediaStream:input_type -> kasugai.MediaStream
	5,  // 48: kasugai.MediaService.EndMediaStream:input_type -> kasugai.Id
	20, // 49: kasugai.MediaService.ManageVoIPCall:input_type -> kasugai.VoIPSignal
	6,  // 50: kasugai.ChatService.SendTextMessage:output_type -> kasugai.Ack
	7,  // 51: kasugai.ChatService.ReceiveTextMessages:output_type -> kasugai.TextMessage
	6,  // 52: kasugai.UserService.RegisterUser:output_type -> kasugai.Ack
	6,  // 53: kasugai.UserService.UpdateUserStatus:output_type -> kasugai.Ack
	8,  // 54: kasugai.UserService.GetUserList:output_type -> kasugai.UserList
	9,  // 55: kasugai.UserService.GetUserById:output_type -> kasugai.User
	6,  // 56: kasugai.RoomService.CreateRoom:output_type -> kasugai.Ack
	6,  // 57: kasugai.RoomService.JoinRoom:output_type -> kasugai.Ack
	6,  // 58: kasugai.RoomService.LeaveRoom:output_type -> kasugai.Ack
	10, // 59: kasugai.RoomService.GetRoomParticipants:output_type -> kasugai.RoomParticipants
	11, // 60: kasugai.RoomService.GetRoomList:output_type -> kasugai.RoomList
	6,  // 61: kasugai.FileTransferService.InitiateFileTransfer:output_type -> kasugai.Ack
	6,  // 62: kasugai.FileTransferService.TransferFileChunk:output_type -> kasugai.Ack
	13, // 63: kasugai.FileTransferService.ReceiveFileMetadata:output_type -> kasugai.FileMetadata
	14, // 64: kasugai.FileTransferService.ReceiveFileChunks:output_type -> kasugai.FileChunk
	15, // 65: kasugai.MediaService.StartMediaStream:output_type -> kasugai.MediaStream
	6,  // 66: kasugai.MediaService.EndMediaStream:output_type -> kasugai.Ack
	20, // 67: kasugai.MediaService.ManageVoIPCall:output_type -> kasugai.VoIPSignal
	50, // [50:68] is the sub-list for method output_type
	32, // [32:50] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_kasugai_proto_init() }
func file_kasugai_proto_init() {
	if File_kasugai_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kasugai_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TextMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RoomParticipants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*RoomList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*FileChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MediaStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*VoIPCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SignalOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SignalAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SignalICECandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kasugai_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*VoIPSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kasugai_proto_msgTypes[12].OneofWrappers = []any{}
	file_kasugai_proto_msgTypes[16].OneofWrappers = []any{
		(*VoIPSignal_Offer)(nil),
		(*VoIPSignal_Answer)(nil),
		(*VoIPSignal_IceCandidate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kasugai_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_kasugai_proto_goTypes,
		DependencyIndexes: file_kasugai_proto_depIdxs,
		EnumInfos:         file_kasugai_proto_enumTypes,
		MessageInfos:      file_kasugai_proto_msgTypes,
	}.Build()
	File_kasugai_proto = out.File
	file_kasugai_proto_rawDesc = nil
	file_kasugai_proto_goTypes = nil
	file_kasugai_proto_depIdxs = nil
}
